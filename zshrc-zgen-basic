# file: zshrc-zgen-basic

#zmodload zsh/zprof  # load zprof module
source $HOME/dotfiles/zgen/zgen.zsh

autoload -U colors && colors
export LSCOLORS="Gxfxcxdxbxegedabagacad"

if ! zgen saved; then
  ### Syntax highlighting bundle.
  zgen load zsh-users/zsh-syntax-highlighting
  ### ZSH port of Fish shell's history search feature.
  zgen load zsh-users/zsh-history-substring-search
  # zgen load catimg
  # zgen load encode64
  # zgen load jsontools
  # zgen load urltools
  zgen save
fi

HISTSIZE=10000
SAVEHIST=10000
HISTFILE=~/.history

source $HOME/dotfiles/scripts/tools/gitinfo
#PROMPT="%{$fg_bold[cyan]%}§ %{$fg_bold[green]%}%c %{$fg_bold[yellow]%}» %{$reset_color%}"
#RPROMPT="%{$fg[cyan]%}%n%{$fg[white]%}@%{$fg[yellow]%}%m%{$reset_color%}"
#ice
#PROMPT="%{$fg_bold[cyan]%}%n%{$fg_bold[blue]%}@%{$fg[cyan]%}%m %{$reset_color%}%{$fg[blue]%}%c %(?,%{$fg_bold[white]%},%{$fg_bold[blue]%})» %{$reset_color%}"
#RPROMPT="%{$fg[magenta]%}$(git_prompt_info)%{$reset_color%} $(git_prompt_status)%{$reset_color%}"

#stealth
#PROMPT="%{$fg_bold[cyan]%}§ %{$fg_bold[green]%}%c %(?,%{$fg_bold[yellow]%},%{$fg[red]%})» %{$reset_color%}"
#RPROMPT="%{$fg[magenta]%}$(git_prompt_info)%{$reset_color%} $(git_prompt_status)%{$reset_color%}"

#local user="%{$fg[magenta]%}%n@%{$fg[magenta]%}%m%{$reset_color%}"
#local pwd="%{$fg[blue]%}%~%{$reset_color%}"
#local return_code="%(?..%{$fg[red]%}%? ↵%{$reset_color%})"
#local git_branch="$(git_prompt_status)%{$reset_color%}$(git_prompt_info)%{$reset_color%}"

#PROMPT="${user} ${pwd}$ "
#RPROMPT="${return_code} ${git_branch} \$(ruby_prompt_info)"

#gnzh
# Check the UID
if [[ $UID -ne 0 ]]; then # normal user
   PR_USER="%{$fg_bold[blue]%}%n%f"
   PR_USER_OP="%{$fg[blue]%}#%f"
   PR_PROMPT="%f➤ %f"
else # root
   PR_USER="%{$fg_bold[red]%} %n%f"
   PR_USER_OP='%F{yellow}%#%f'
   PR_PROMPT='%F{red}➤ %f'
fi
# Check if we are on SSH or not
if [[ -n "$SSH_CLIENT"  ||  -n "$SSH2_CLIENT" ]]; then
  PR_HOST='%F{gray}%M%f' # SSH
else
  PR_HOST='%F{white}%M%f' # no SSH
fi

local return_code="%(?..%F{red}%? ↵%f)"
local user_host="${PR_USER}%F{cyan}@${PR_HOST}"
local git_branch="%F{yellow}$(git_current_branch)"
local current_dir="%B%F{cyan}%~%f%b"

PROMPT="╭─(${user_host} ${current_dir} ${git_branch}%{$reset_color%})
╰─$PR_PROMPT "
RPROMPT="${return_code}"

# aliases
alias zcfg="vim $HOME/.zshrc"
alias vcfg="vim $HOME/.vimrc"

alias t='tree'
alias t2='tree -L 2'
alias t3='tree -L 3'
alias td='tree -d'
alias td2='tree -L 2 -d'
alias td3='tree -L 3 -d'

alias urlencode='python -c "import sys, urllib as ul; \ print ul.quote_plus(sys.argv[1])"'
alias urldecode='python -c "import sys, urllib as ul; \ print ul.unquote_plus(sys.argv[1])"'

if [[ "$OSTYPE" == "cygwin"* ]]; then
    alias ls='ls --color --indicator-style=slash --group-directories-first' #--sort=time|size
    alias history='fc -il 1' #to read the $HISTFILE showing the dates
fi

# initializers
#eval "$(rbenv init -)"

# bindkey style emacs (-e) or vi (-v)
bindkey -v

# backspace and ^h working even after returning from command mode
bindkey '^?' backward-delete-char #backspace key
bindkey '^h' backward-delete-char #backspace key
bindkey '^[[3~' delete-char #delete key
bindkey '\e[1~' beginning-of-line #home key
bindkey '\e[4~' end-of-line #end key

# ctrl-w removed word backwards
#bindkey '^w' backward-kill-word

# ctrl-r starts searching history backward
bindkey '^r' history-incremental-search-backward

# history substr search keys
bindkey "^[[A" history-beginning-search-backward
bindkey "^[[B" history-beginning-search-forward

if [ -n "$SSH_AUTH_SOCK" ]
then
    ssh-add -q $HOME/.ssh/*.key > /dev/null
fi

# Print a random, hopefully interesting, adage.
print -P "\e[1;36m"
$(type fortune &> /dev/null) && $(type cowsay &> /dev/null) && fortune -s | cowsay

#zprof  #zsh profiling
